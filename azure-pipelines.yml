# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: simmo-vars

steps:
  - task: TerraformInstaller@0
    displayName: 'Terraform Installer'
    inputs:
      terraformVersion: 'latest'

  - task: TerraformCLI@0
    displayName: 'Terraform init'
    inputs:
      command: 'init'
      backendServiceArm: $(backendServiceArm)
      backendAzureRmResourceGroupName: '$(backendAzureRmResourceGroupName)'
      backendAzureRmContainerName: '$(backendAzureRmContainerName)'
      backendAzureRmStorageAccountName: '$(backendAzureRmStorageAccountName)'
      backendAzureRmKey: '$(backendAzureRmKey)'
      backendAzureRmResourceGroupLocation: '$(backendAzureRmResourceGroupLocation)'
      backendType: '$(backendType)'
      ensureBackend: true
      allowTelemetryCollection: true

  - task: TerraformCLI@0
    displayName: 'Terraform validate'
    inputs:
      command: 'validate'
      allowTelemetryCollection: true

  - task: TerraformCLI@0
    displayName: 'Terraform plan'
    inputs:
      command: 'plan'
      allowTelemetryCollection: true
      environmentServiceName: $(backendServiceArm)

  - task: TerraformCLI@0
    displayName: 'Terraform apply'
    inputs:
      command: 'apply'
      allowTelemetryCollection: true
      environmentServiceName: $(backendServiceArm)

